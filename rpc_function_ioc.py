#!/usr/bin/env python3
from pprint import pprint
import random

from caproto.server import (pvproperty, PVGroup, pvfunction, ioc_arg_parser,
                            run)


class MyPVGroup(PVGroup):
    'Example group of PVs, where the prefix is defined on instantiation'
    # PV #1: {prefix}random - defaults to dtype of int
    @pvproperty
    async def fixed_random(self, instance):
        'Random integer between 1 and 100'
        return random.randint(1, 100)

    @pvfunction(default=[0])
    async def get_random(self,
                         low: int=100,
                         high: int=1000) -> int:
        'A configurable random number'
        return random.randint(low, high)


if __name__ == '__main__':
    ioc_options, run_options = ioc_arg_parser(
        default_prefix='rpc:',
        desc='Run an IOC with an RPC function.')

    ioc = MyPVGroup(**ioc_options)

    # here's what accessing a pvproperty descriptor looks like:
    print(f'fixed_random using the descriptor getter is: {ioc.fixed_random}')
    print(f'get_random using the descriptor getter is: {ioc.get_random}')
    print('get_random is an autogenerated subgroup with PVs:')
    for pvspec in ioc.get_random.pvdb.items():
        print(f'\t{pvspec!r}')

    # here is the auto-generated pvdb:
    pprint(ioc.pvdb)
    run(ioc.pvdb, **run_options)
